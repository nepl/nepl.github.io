/*The MIT License (MIT) Copyright (c) 2013 Alice Lieutier https://github.com/alicelieutier/smoothScroll */
function ssc_init() {
    if (document.body) {
        var e = document.body
            , t = document.documentElement
            , r = window.innerHeight
            , n = e.scrollHeight;
        if (ssc_root = document.compatMode.indexOf("CSS") >= 0 ? t : e, ssc_activeElement = e, ssc_initdone = !0, top != self) ssc_frame = !0;
        else if (n > r && (e.offsetHeight <= r || t.offsetHeight <= r) && (ssc_root.style.height = "auto", ssc_root.offsetHeight <= r)) {
            var s = document.createElement("div");
            s.style.clear = "both", e.appendChild(s)
        }
        ssc_fixedback || (e.style.backgroundAttachment = "scroll", t.style.backgroundAttachment = "scroll"), ssc_keyboardsupport && ssc_addEvent("keydown", ssc_keydown)
    }
}

function ssc_scrollArray(e, t, r, n) {
    if (n || (n = 1e3), ssc_directionCheck(t, r), ssc_que.push({
            x: t
            , y: r
            , lastX: 0 > t ? .99 : -.99
            , lastY: 0 > r ? .99 : -.99
            , start: +new Date
        }), !ssc_pending) {
        var s = function () {
            for (var i = +new Date, o = 0, a = 0, l = 0; l < ssc_que.length; l++) {
                var c = ssc_que[l]
                    , u = i - c.start
                    , f = u >= ssc_animtime
                    , d = f ? 1 : u / ssc_animtime;
                ssc_pulseAlgorithm && (d = ssc_pulse(d));
                var h = c.x * d - c.lastX >> 0
                    , p = c.y * d - c.lastY >> 0;
                o += h, a += p, c.lastX += h, c.lastY += p, f && (ssc_que.splice(l, 1), l--)
            }
            if (t) {
                var v = e.scrollLeft;
                e.scrollLeft += o, o && e.scrollLeft === v && (t = 0)
            }
            if (r) {
                var m = e.scrollTop;
                e.scrollTop += a, a && e.scrollTop === m && (r = 0)
            }
            t || r || (ssc_que = []), ssc_que.length ? setTimeout(s, n / ssc_framerate + 1) : ssc_pending = !1
        };
        setTimeout(s, 0), ssc_pending = !0
    }
}

function ssc_wheel(e) {
    ssc_initdone || ssc_init();
    var t = e.target
        , r = ssc_overflowingAncestor(t);
    if (!r || e.defaultPrevented || ssc_isNodeName(ssc_activeElement, "embed") || ssc_isNodeName(t, "embed") && /\.pdf/i.test(t.src)) return !0;
    var n = e.wheelDeltaX || 0
        , s = e.wheelDeltaY || 0;
    n || s || (s = e.wheelDelta || 0), Math.abs(n) > 1.2 && (n *= ssc_stepsize / 120), Math.abs(s) > 1.2 && (s *= ssc_stepsize / 120), ssc_scrollArray(r, -n, -s), e.preventDefault()
}

function ssc_keydown(e) {
    var t = e.target
        , r = e.ctrlKey || e.altKey || e.metaKey;
    if (/input|textarea|embed/i.test(t.nodeName) || t.isContentEditable || e.defaultPrevented || r) return !0;
    if (ssc_isNodeName(t, "button") && e.keyCode === ssc_key.spacebar) return !0;
    var n, s = 0
        , i = 0
        , o = ssc_overflowingAncestor(ssc_activeElement)
        , a = o.clientHeight;
    switch (o == document.body && (a = window.innerHeight), e.keyCode) {
    case ssc_key.up:
        i = -ssc_arrowscroll;
        break;
    case ssc_key.down:
        i = ssc_arrowscroll;
        break;
    case ssc_key.spacebar:
        n = e.shiftKey ? 1 : -1, i = -n * a * .9;
        break;
    case ssc_key.pageup:
        i = .9 * -a;
        break;
    case ssc_key.pagedown:
        i = .9 * a;
        break;
    case ssc_key.home:
        i = -o.scrollTop;
        break;
    case ssc_key.end:
        var l = o.scrollHeight - o.scrollTop - a;
        i = l > 0 ? l + 10 : 0;
        break;
    case ssc_key.left:
        s = -ssc_arrowscroll;
        break;
    case ssc_key.right:
        s = ssc_arrowscroll;
        break;
    default:
        return !0
    }
    ssc_scrollArray(o, s, i), e.preventDefault()
}

function ssc_mousedown(e) {
    ssc_activeElement = e.target
}

function ssc_setCache(e, t) {
    for (var r = e.length; r--;) ssc_cache[ssc_uniqueID(e[r])] = t;
    return t
}

function ssc_overflowingAncestor(e) {
    var t = []
        , r = ssc_root.scrollHeight;
    do {
        var n = ssc_cache[ssc_uniqueID(e)];
        if (n) return ssc_setCache(t, n);
        if (t.push(e), r === e.scrollHeight) {
            if (!ssc_frame || ssc_root.clientHeight + 10 < r) return ssc_setCache(t, document.body)
        }
        else if (e.clientHeight + 10 < e.scrollHeight && (overflow = getComputedStyle(e, "").getPropertyValue("overflow"), "scroll" === overflow || "auto" === overflow)) return ssc_setCache(t, e)
    } while (e = e.parentNode)
}

function ssc_addEvent(e, t, r) {
    window.addEventListener(e, t, r || !1)
}

function ssc_removeEvent(e, t, r) {
    window.removeEventListener(e, t, r || !1)
}

function ssc_isNodeName(e, t) {
    return e.nodeName.toLowerCase() === t.toLowerCase()
}

function ssc_directionCheck(e, t) {
    e = e > 0 ? 1 : -1, t = t > 0 ? 1 : -1, (ssc_direction.x !== e || ssc_direction.y !== t) && (ssc_direction.x = e, ssc_direction.y = t, ssc_que = [])
}

function ssc_pulse_(e) {
    var t, r, n;
    return e *= ssc_pulseScale, 1 > e ? t = e - (1 - Math.exp(-e)) : (r = Math.exp(-1), e -= 1, n = 1 - Math.exp(-e), t = r + n * (1 - r)), t * ssc_pulseNormalize
}

function ssc_pulse(e) {
    return e >= 1 ? 1 : 0 >= e ? 0 : (1 == ssc_pulseNormalize && (ssc_pulseNormalize /= ssc_pulse_(1)), ssc_pulse_(e))
}
var ssc_framerate = 150
    , ssc_animtime = 500
    , ssc_stepsize = 150
    , ssc_pulseAlgorithm = !0
    , ssc_pulseScale = 6
    , ssc_pulseNormalize = 1
    , ssc_keyboardsupport = !0
    , ssc_arrowscroll = 50
    , ssc_frame = !1
    , ssc_direction = {
        x: 0
        , y: 0
    }
    , ssc_initdone = !1
    , ssc_fixedback = !0
    , ssc_root = document.documentElement
    , ssc_activeElement, ssc_key = {
        left: 37
        , up: 38
        , right: 39
        , down: 40
        , spacebar: 32
        , pageup: 33
        , pagedown: 34
        , end: 35
        , home: 36
    }
    , ssc_que = []
    , ssc_pending = !1
    , ssc_cache = {};
setInterval(function () {
    ssc_cache = {}
}, 1e4);
var ssc_uniqueID = function () {
        var e = 0;
        return function (t) {
            return t.ssc_uniqueID || (t.ssc_uniqueID = e++)
        }
    }()
    , ischrome = /chrome/.test(navigator.userAgent.toLowerCase());
ischrome && (ssc_addEvent("mousedown", ssc_mousedown), ssc_addEvent("mousewheel", ssc_wheel), ssc_addEvent("load", ssc_init));